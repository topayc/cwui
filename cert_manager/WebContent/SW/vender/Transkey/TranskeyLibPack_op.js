function BarrettMu(m){this.modulus=biCopy(m);this.k=biHighIndex(this.modulus)+1;var b2k=new BigInt();b2k.digits[2*this.k]=1;this.mu=biDivide(b2k,this.modulus);this.bkplus1=new BigInt();this.bkplus1.digits[this.k+1]=1;this.modulo=BarrettMu_modulo;this.multiplyMod=BarrettMu_multiplyMod;this.powMod=BarrettMu_powMod}function BarrettMu_modulo(x){var q1=biDivideByRadixPower(x,this.k-1);var q2=biMultiply(q1,this.mu);var q3=biDivideByRadixPower(q2,this.k+1);var r1=biModuloByRadixPower(x,this.k+1);var r2term=biMultiply(q3,this.modulus);var r2=biModuloByRadixPower(r2term,this.k+1);var r=biSubtract(r1,r2);if(r.isNeg){r=biAdd(r,this.bkplus1)}var rgtem=biCompare(r,this.modulus)>=0;while(rgtem){r=biSubtract(r,this.modulus);rgtem=biCompare(r,this.modulus)>=0}return r}function BarrettMu_multiplyMod(x,y){var xy=biMultiply(x,y);return this.modulo(xy)}function BarrettMu_powMod(x,y){var result=new BigInt();result.digits[0]=1;var a=x;var k=y;while(true){if((k.digits[0]&1)!=0)result=this.multiplyMod(result,a);k=biShiftRight(k,1);if(k.digits[0]==0&&biHighIndex(k)==0)break;a=this.multiplyMod(a,a)}return result}var biRadixBase=2;var biRadixBits=16;var bitsPerDigit=biRadixBits;var biRadix=1<<16;var biHalfRadix=biRadix>>>1;var biRadixSquared=biRadix*biRadix;var maxDigitVal=biRadix-1;var maxInteger=9999999999999998;var maxDigits;var ZERO_ARRAY;var bigZero,bigOne;function setMaxDigits(value){maxDigits=value;ZERO_ARRAY=new Array(maxDigits);for(var iza=0;iza<ZERO_ARRAY.length;iza++)ZERO_ARRAY[iza]=0;bigZero=new BigInt();bigOne=new BigInt();bigOne.digits[0]=1}setMaxDigits(20);var dpl10=15;var lr10=biFromNumber(1000000000000000);function BigInt(flag){if(typeof flag=="boolean"&&flag==true){this.digits=null}else{this.digits=ZERO_ARRAY.slice(0)}this.isNeg=false}function biFromDecimal(s){var isNeg=s.charAt(0)=='-';var i=isNeg?1:0;var result;while(i<s.length&&s.charAt(i)=='0')++i;if(i==s.length){result=new BigInt()}else{var digitCount=s.length-i;var fgl=digitCount%dpl10;if(fgl==0)fgl=dpl10;result=biFromNumber(Number(s.substr(i,fgl)));i+=fgl;while(i<s.length){result=biAdd(biMultiply(result,lr10),biFromNumber(Number(s.substr(i,dpl10))));i+=dpl10}result.isNeg=isNeg}return result}function biCopy(bi){var result=new BigInt(true);result.digits=bi.digits.slice(0);result.isNeg=bi.isNeg;return result}function biFromNumber(i){var result=new BigInt();result.isNeg=i<0;i=Math.abs(i);var j=0;while(i>0){result.digits[j++]=i&maxDigitVal;i=Math.floor(i/biRadix)}return result}function reverseStr(s){var result="";for(var i=s.length-1;i>-1;--i){result+=s.charAt(i)}return result}var hexatrigesimalToChar=new Array('0','1','2','3','4','5','6','7','8','9','a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z');function biToString(x,radix){var b=new BigInt();b.digits[0]=radix;var qr=biDivideModulo(x,b);var result=hexatrigesimalToChar[qr[1].digits[0]];while(biCompare(qr[0],bigZero)==1){qr=biDivideModulo(qr[0],b);digit=qr[1].digits[0];result+=hexatrigesimalToChar[qr[1].digits[0]]}return(x.isNeg?"-":"")+reverseStr(result)}function biToDecimal(x){var b=new BigInt();b.digits[0]=10;var qr=biDivideModulo(x,b);var result=String(qr[1].digits[0]);while(biCompare(qr[0],bigZero)==1){qr=biDivideModulo(qr[0],b);result+=String(qr[1].digits[0])}return(x.isNeg?"-":"")+reverseStr(result)}var hexToChar=new Array('0','1','2','3','4','5','6','7','8','9','a','b','c','d','e','f');function digitToHex(n){var mask=0xf;var result="";for(i=0;i<4;++i){result+=hexToChar[n&mask];n>>>=4}return reverseStr(result)}function biToHex(x){var result="";for(var i=biHighIndex(x);i>-1;--i){result+=digitToHex(x.digits[i])}return result}function charToHex(c){var ZERO=48;var NINE=ZERO+9;var littleA=97;var littleZ=littleA+25;var bigA=65;var bigZ=65+25;var result;if(c>=ZERO&&c<=NINE){result=c-ZERO}else if(c>=bigA&&c<=bigZ){result=10+c-bigA}else if(c>=littleA&&c<=littleZ){result=10+c-littleA}else{result=0}return result}function hexToDigit(s){var result=0;var sl=Math.min(s.length,4);for(var i=0;i<sl;++i){result<<=4;result|=charToHex(s.charCodeAt(i))}return result}function biFromHex(s){var result=new BigInt();var sl=s.length;for(var i=sl,j=0;i>0;i-=4,++j){result.digits[j]=hexToDigit(s.substr(Math.max(i-4,0),Math.min(i,4)))}return result}function biFromString(s,radix){var isNeg=s.charAt(0)=='-';var istop=isNeg?1:0;var result=new BigInt();var place=new BigInt();place.digits[0]=1;for(var i=s.length-1;i>=istop;i--){var c=s.charCodeAt(i);var digit=charToHex(c);var biDigit=biMultiplyDigit(place,digit);result=biAdd(result,biDigit);place=biMultiplyDigit(place,radix)}result.isNeg=isNeg;return result}function biDump(b){return(b.isNeg?"-":"")+b.digits.join(" ")}function biAdd(x,y){var result;if(x.isNeg!=y.isNeg){y.isNeg=!y.isNeg;result=biSubtract(x,y);y.isNeg=!y.isNeg}else{result=new BigInt();var c=0;var n;for(var i=0;i<x.digits.length;++i){n=x.digits[i]+y.digits[i]+c;result.digits[i]=n%biRadix;c=Number(n>=biRadix)}result.isNeg=x.isNeg}return result}function biSubtract(x,y){var result;if(x.isNeg!=y.isNeg){y.isNeg=!y.isNeg;result=biAdd(x,y);y.isNeg=!y.isNeg}else{result=new BigInt();var n,c;c=0;for(var i=0;i<x.digits.length;++i){n=x.digits[i]-y.digits[i]+c;result.digits[i]=n%biRadix;if(result.digits[i]<0)result.digits[i]+=biRadix;c=0-Number(n<0)}if(c==-1){c=0;for(var i=0;i<x.digits.length;++i){n=0-result.digits[i]+c;result.digits[i]=n%biRadix;if(result.digits[i]<0)result.digits[i]+=biRadix;c=0-Number(n<0)}result.isNeg=!x.isNeg}else{result.isNeg=x.isNeg}}return result}function biHighIndex(x){var result=x.digits.length-1;while(result>0&&x.digits[result]==0)--result;return result}function biNumBits(x){var n=biHighIndex(x);var d=x.digits[n];var m=(n+1)*bitsPerDigit;var result;for(result=m;result>m-bitsPerDigit;--result){if((d&0x8000)!=0)break;d<<=1}return result}function biMultiply(x,y){var result=new BigInt();var c;var n=biHighIndex(x);var t=biHighIndex(y);var uv,k;for(var i=0;i<=t;++i){c=0;k=i;for(j=0;j<=n;++j,++k){uv=result.digits[k]+x.digits[j]*y.digits[i]+c;result.digits[k]=uv&maxDigitVal;c=uv>>>biRadixBits}result.digits[i+n+1]=c}result.isNeg=x.isNeg!=y.isNeg;return result}function biMultiplyDigit(x,y){var n,c,uv;result=new BigInt();n=biHighIndex(x);c=0;for(var j=0;j<=n;++j){uv=result.digits[j]+x.digits[j]*y+c;result.digits[j]=uv&maxDigitVal;c=uv>>>biRadixBits}result.digits[1+n]=c;return result}function arrayCopy(src,srcStart,dest,destStart,n){var m=Math.min(srcStart+n,src.length);for(var i=srcStart,j=destStart;i<m;++i,++j){dest[j]=src[i]}}var highBitMasks=new Array(0x0000,0x8000,0xC000,0xE000,0xF000,0xF800,0xFC00,0xFE00,0xFF00,0xFF80,0xFFC0,0xFFE0,0xFFF0,0xFFF8,0xFFFC,0xFFFE,0xFFFF);function biShiftLeft(x,n){var digitCount=Math.floor(n/bitsPerDigit);var result=new BigInt();arrayCopy(x.digits,0,result.digits,digitCount,result.digits.length-digitCount);var bits=n%bitsPerDigit;var rightBits=bitsPerDigit-bits;for(var i=result.digits.length-1,i1=i-1;i>0;--i,--i1){result.digits[i]=((result.digits[i]<<bits)&maxDigitVal)|((result.digits[i1]&highBitMasks[bits])>>>(rightBits))}result.digits[0]=((result.digits[i]<<bits)&maxDigitVal);result.isNeg=x.isNeg;return result}var lowBitMasks=new Array(0x0000,0x0001,0x0003,0x0007,0x000F,0x001F,0x003F,0x007F,0x00FF,0x01FF,0x03FF,0x07FF,0x0FFF,0x1FFF,0x3FFF,0x7FFF,0xFFFF);function biShiftRight(x,n){var digitCount=Math.floor(n/bitsPerDigit);var result=new BigInt();arrayCopy(x.digits,digitCount,result.digits,0,x.digits.length-digitCount);var bits=n%bitsPerDigit;var leftBits=bitsPerDigit-bits;for(var i=0,i1=i+1;i<result.digits.length-1;++i,++i1){result.digits[i]=(result.digits[i]>>>bits)|((result.digits[i1]&lowBitMasks[bits])<<leftBits)}result.digits[result.digits.length-1]>>>=bits;result.isNeg=x.isNeg;return result}function biMultiplyByRadixPower(x,n){var result=new BigInt();arrayCopy(x.digits,0,result.digits,n,result.digits.length-n);return result}function biDivideByRadixPower(x,n){var result=new BigInt();arrayCopy(x.digits,n,result.digits,0,result.digits.length-n);return result}function biModuloByRadixPower(x,n){var result=new BigInt();arrayCopy(x.digits,0,result.digits,0,n);return result}function biCompare(x,y){if(x.isNeg!=y.isNeg){return 1-2*Number(x.isNeg)}for(var i=x.digits.length-1;i>=0;--i){if(x.digits[i]!=y.digits[i]){if(x.isNeg){return 1-2*Number(x.digits[i]>y.digits[i])}else{return 1-2*Number(x.digits[i]<y.digits[i])}}}return 0}function biDivideModulo(x,y){var nb=biNumBits(x);var tb=biNumBits(y);var origYIsNeg=y.isNeg;var q,r;if(nb<tb){if(x.isNeg){q=biCopy(bigOne);q.isNeg=!y.isNeg;x.isNeg=false;y.isNeg=false;r=biSubtract(y,x);x.isNeg=true;y.isNeg=origYIsNeg}else{q=new BigInt();r=biCopy(x)}return new Array(q,r)}q=new BigInt();r=x;var t=Math.ceil(tb/bitsPerDigit)-1;var lambda=0;while(y.digits[t]<biHalfRadix){y=biShiftLeft(y,1);++lambda;++tb;t=Math.ceil(tb/bitsPerDigit)-1}r=biShiftLeft(r,lambda);nb+=lambda;var n=Math.ceil(nb/bitsPerDigit)-1;var b=biMultiplyByRadixPower(y,n-t);while(biCompare(r,b)!=-1){++q.digits[n-t];r=biSubtract(r,b)}for(var i=n;i>t;--i){var ri=(i>=r.digits.length)?0:r.digits[i];var ri1=(i-1>=r.digits.length)?0:r.digits[i-1];var ri2=(i-2>=r.digits.length)?0:r.digits[i-2];var yt=(t>=y.digits.length)?0:y.digits[t];var yt1=(t-1>=y.digits.length)?0:y.digits[t-1];if(ri==yt){q.digits[i-t-1]=maxDigitVal}else{q.digits[i-t-1]=Math.floor((ri*biRadix+ri1)/yt)}var c1=q.digits[i-t-1]*((yt*biRadix)+yt1);var c2=(ri*biRadixSquared)+((ri1*biRadix)+ri2);while(c1>c2){--q.digits[i-t-1];c1=q.digits[i-t-1]*((yt*biRadix)|yt1);c2=(ri*biRadix*biRadix)+((ri1*biRadix)+ri2)}b=biMultiplyByRadixPower(y,i-t-1);r=biSubtract(r,biMultiplyDigit(b,q.digits[i-t-1]));if(r.isNeg){r=biAdd(r,b);--q.digits[i-t-1]}}r=biShiftRight(r,lambda);q.isNeg=x.isNeg!=origYIsNeg;if(x.isNeg){if(origYIsNeg){q=biAdd(q,bigOne)}else{q=biSubtract(q,bigOne)}y=biShiftRight(y,lambda);r=biSubtract(y,r)}if(r.digits[0]==0&&biHighIndex(r)==0)r.isNeg=false;return new Array(q,r)}function biDivide(x,y){return biDivideModulo(x,y)[0]}function biModulo(x,y){return biDivideModulo(x,y)[1]}function biMultiplyMod(x,y,m){return biModulo(biMultiply(x,y),m)}function biPow(x,y){var result=bigOne;var a=x;while(true){if((y&1)!=0)result=biMultiply(result,a);y>>=1;if(y==0)break;a=biMultiply(a,a)}return result}function biPowMod(x,y,m){var result=bigOne;var a=x;var k=y;while(true){if((k.digits[0]&1)!=0)result=biMultiplyMod(result,a,m);k=biShiftRight(k,1);if(k.digits[0]==0&&biHighIndex(k)==0)break;a=biMultiplyMod(a,a,m)}return result}var GenKey=function(){var g_tk_seed="";var g_tk_seeded=0;var g_tk_pool=10325476;var g_tk_x="";function S4(){now=new Date();seed=now.getSeconds();return tk_getrnd_hex(2)};this.GenerateKey=function(bit){var cnt=bit/(8*4);var key='';for(var i=0;i<cnt;i++){key+=S4()}return key};this.tk_sh1prng=function(){return tk_sh1prng()};this.tk_getrnd_int=function(){return tk_getrnd_int()};function tk_entropy_pool(value){g_tk_pool+=value}function tk_get_entropy(){now=new Date();Xseed1=now.getSeconds();Xseed2=now.getMilliseconds();var seed=Xseed2+screen.height.toString()+screen.colorDepth.toString()+screen.availWidth.toString()+screen.availHeight.toString()+Xseed1.toString()+g_tk_pool+Xseed2.toString();return seed}function tk_sh1prng(){now=new Date();if(!g_tk_seeded){g_tk_seed=CryptoJS.SHA256(tk_get_entropy());g_tk_seeded=1}XSEEDj=now.getSeconds()+now.getMilliseconds();var xval=XSEEDj+g_tk_seed+g_tk_x+1;g_tk_x=CryptoJS.SHA256(xval).toString();return g_tk_x}function tk_getrnd_hex(length){var rand="";if(length<20){rand=tk_sh1prng();rand=rand.substring(0,length*2);return rand}else{for(var i=0;i<parseInt(length/20);i++){rand+=tk_sh1prng()}if(length%20){rand_tmp=tk_sh1prng();rand+=rand_tmp.substring(0,(length%20)*2)}}return rand}function tk_getrnd_int(){var rand="";rand_int=0;rand=tk_sh1prng();rand=rand.substring(0,8);rand_int=parseInt(rand,16);return rand_int}function tk_sha1(msg){function rotate_left(n,s){var t4=(n<<s)|(n>>>(32-s));return t4};function lsb_hex(val){var str="";var i;var vh;var vl;for(i=0;i<=6;i+=2){vh=(val>>>(i*4+4))&0x0f;vl=(val>>>(i*4))&0x0f;str+=vh.toString(16)+vl.toString(16)}return str};function cvt_hex(val){var str="";var i;var v;for(i=7;i>=0;i--){v=(val>>>(i*4))&0x0f;str+=v.toString(16)}return str};function Utf8Encode(string){var utftext="";for(var n=0;n<string.length;n++){var c=string.charCodeAt(n);if(c<128){utftext+=String.fromCharCode(c)}else if((c>127)&&(c<2048)){utftext+=String.fromCharCode((c>>6)|192);utftext+=String.fromCharCode((c&63)|128)}else{utftext+=String.fromCharCode((c>>12)|224);utftext+=String.fromCharCode(((c>>6)&63)|128);utftext+=String.fromCharCode((c&63)|128)}}return utftext};var blockstart;var i,j;var W=new Array(80);var H0=0x67452301;var H1=0xEFCDAB89;var H2=0x98BADCFE;var H3=0x10325476;var H4=0xC3D2E1F0;var A,B,C,D,E;var temp;msg=Utf8Encode(msg);var msg_len=msg.length;var word_array=new Array();for(i=0;i<msg_len-3;i+=4){j=msg.charCodeAt(i)<<24|msg.charCodeAt(i+1)<<16|msg.charCodeAt(i+2)<<8|msg.charCodeAt(i+3);word_array.push(j)}switch(msg_len%4){case 0:i=0x080000000;break;case 1:i=msg.charCodeAt(msg_len-1)<<24|0x0800000;break;case 2:i=msg.charCodeAt(msg_len-2)<<24|msg.charCodeAt(msg_len-1)<<16|0x08000;break;case 3:i=msg.charCodeAt(msg_len-3)<<24|msg.charCodeAt(msg_len-2)<<16|msg.charCodeAt(msg_len-1)<<8|0x80;break}word_array.push(i);while((word_array.length%16)!=14)word_array.push(0);word_array.push(msg_len>>>29);word_array.push((msg_len<<3)&0x0ffffffff);for(blockstart=0;blockstart<word_array.length;blockstart+=16){for(i=0;i<16;i++)W[i]=word_array[blockstart+i];for(i=16;i<=79;i++)W[i]=rotate_left(W[i-3]^W[i-8]^W[i-14]^W[i-16],1);A=H0;B=H1;C=H2;D=H3;E=H4;for(i=0;i<=19;i++){temp=(rotate_left(A,5)+((B&C)|(~B&D))+E+W[i]+0x5A827999)&0x0ffffffff;E=D;D=C;C=rotate_left(B,30);B=A;A=temp}for(i=20;i<=39;i++){temp=(rotate_left(A,5)+(B^C^D)+E+W[i]+0x6ED9EBA1)&0x0ffffffff;E=D;D=C;C=rotate_left(B,30);B=A;A=temp}for(i=40;i<=59;i++){temp=(rotate_left(A,5)+((B&C)|(B&D)|(C&D))+E+W[i]+0x8F1BBCDC)&0x0ffffffff;E=D;D=C;C=rotate_left(B,30);B=A;A=temp}for(i=60;i<=79;i++){temp=(rotate_left(A,5)+(B^C^D)+E+W[i]+0xCA62C1D6)&0x0ffffffff;E=D;D=C;C=rotate_left(B,30);B=A;A=temp}H0=(H0+A)&0x0ffffffff;H1=(H1+B)&0x0ffffffff;H2=(H2+C)&0x0ffffffff;H3=(H3+D)&0x0ffffffff;H4=(H4+E)&0x0ffffffff}var temp=cvt_hex(H0)+cvt_hex(H1)+cvt_hex(H2)+cvt_hex(H3)+cvt_hex(H4);return temp.toLowerCase()}};function RSAKeyPair(encryptionExponent,decryptionExponent,modulus){this.e=biFromHex(encryptionExponent);this.d=biFromHex(decryptionExponent);this.m=biFromHex(modulus);this.chunkSize=2*biHighIndex(this.m);this.radix=16;this.barrett=new BarrettMu(this.m)}function twoDigit(n){return(n<10?"0":"")+String(n)}function encryptedString(key,s){var a=new Array();var sl=s.length;var i=0;while(i<sl){a[i]=s.charCodeAt(i);i++}while(a.length%key.chunkSize!=0){a[i++]=0}var al=a.length;var result="";var j,k,block;for(i=0;i<al;i+=key.chunkSize){block=new BigInt();j=0;for(k=i;k<i+key.chunkSize;++j){block.digits[j]=a[k++];block.digits[j]+=a[k++]<<8}var crypt=key.barrett.powMod(block,key.e);var text=key.radix==16?biToHex(crypt):biToString(crypt,key.radix);result+=text+" "}return result.substring(0,result.length-1)}function decryptedString(key,s){var blocks=s.split(" ");var result="";var i,j,block;for(i=0;i<blocks.length;++i){var bi;if(key.radix==16){bi=biFromHex(blocks[i])}else{bi=biFromString(blocks[i],key.radix)}block=key.barrett.powMod(bi,key.d);for(j=0;j<=biHighIndex(block);++j){result+=String.fromCharCode(block.digits[j]&255,block.digits[j]>>8)}}if(result.charCodeAt(result.length-1)==0){result=result.substring(0,result.length-1)}return result}var Seed={};var ENDIAN=1;Seed.GetB0=function(A){return(0x000000ff&(A))};Seed.GetB1=function(A){return(0x000000ff&((A)>>>8))};Seed.GetB2=function(A){return(0x000000ff&((A)>>>16))};Seed.GetB3=function(A){return(0x000000ff&((A)>>>24))};Seed.Endian=function(edn){ENDIAN=edn};Seed.EndianChange=function(dws){dws[0]=(dws[0]>>>24)|(dws[0]<<24)|((dws[0]<<8)&0x00ff0000)|((dws[0]>>>8)&0x0000ff00)};Seed.EndianChange=function(dws){return(dws>>>24)|(dws<<24)|((dws<<8)&0x00ff0000)|((dws>>>8)&0x0000ff00)};Seed.SeedRound=function(L0,L1,R0,R1,K){var T0,T1;var T00=0,T11=0;T0=R0[0]^K[0];T1=R1[0]^K[1];T1^=T0;T00=(T0<0)?(T0&0x7fffffff)|(0x80000000):(T0);T1=Seed.SS0[Seed.GetB0(T1)]^Seed.SS1[Seed.GetB1(T1)]^Seed.SS2[Seed.GetB2(T1)]^Seed.SS3[Seed.GetB3(T1)];T11=(T1<0)?(T1&0x7fffffff)|(0x80000000):(T1);T00+=T11;T0=Seed.SS0[Seed.GetB0(T00)]^Seed.SS1[Seed.GetB1(T00)]^Seed.SS2[Seed.GetB2(T00)]^Seed.SS3[Seed.GetB3(T00)];T00=(T0<0)?(T0&0x7fffffff)|(0x80000000):(T0);T11+=T00;T1=Seed.SS0[Seed.GetB0(T11)]^Seed.SS1[Seed.GetB1(T11)]^Seed.SS2[Seed.GetB2(T11)]^Seed.SS3[Seed.GetB3(T11)];T11=(T1<0)?(T1&0x7fffffff)|(0x80000000):(T1);T00+=T11;L0[0]^=T00;L1[0]^=T11};Seed.SeedEncrypt=function(inData,roundKey,outData){var L0=new Array(1);var L1=new Array(1);var R0=new Array(1);var R1=new Array(1);L0[0]=0x0;L1[0]=0x0;R0[0]=0x0;R1[0]=0x0;var K=new Array(2);var nCount=0;L0[0]=(inData[0]&0x000000ff);L0[0]=((L0[0])<<8)^(inData[1]&0x000000ff);L0[0]=((L0[0])<<8)^(inData[2]&0x000000ff);L0[0]=((L0[0])<<8)^(inData[3]&0x000000ff);L1[0]=(inData[4]&0x000000ff);L1[0]=((L1[0])<<8)^(inData[5]&0x000000ff);L1[0]=((L1[0])<<8)^(inData[6]&0x000000ff);L1[0]=((L1[0])<<8)^(inData[7]&0x000000ff);R0[0]=(inData[8]&0x000000ff);R0[0]=((R0[0])<<8)^(inData[9]&0x000000ff);R0[0]=((R0[0])<<8)^(inData[10]&0x000000ff);R0[0]=((R0[0])<<8)^(inData[11]&0x000000ff);R1[0]=(inData[12]&0x000000ff);R1[0]=((R1[0])<<8)^(inData[13]&0x000000ff);R1[0]=((R1[0])<<8)^(inData[14]&0x000000ff);R1[0]=((R1[0])<<8)^(inData[15]&0x000000ff);if(!ENDIAN){EndianChange(L0);EndianChange(L1);EndianChange(R0);EndianChange(R1)}K[0]=roundKey[nCount++];K[1]=roundKey[nCount++];Seed.SeedRound(L0,L1,R0,R1,K);K[0]=roundKey[nCount++];K[1]=roundKey[nCount++];Seed.SeedRound(R0,R1,L0,L1,K);K[0]=roundKey[nCount++];K[1]=roundKey[nCount++];Seed.SeedRound(L0,L1,R0,R1,K);K[0]=roundKey[nCount++];K[1]=roundKey[nCount++];Seed.SeedRound(R0,R1,L0,L1,K);K[0]=roundKey[nCount++];K[1]=roundKey[nCount++];Seed.SeedRound(L0,L1,R0,R1,K);K[0]=roundKey[nCount++];K[1]=roundKey[nCount++];Seed.SeedRound(R0,R1,L0,L1,K);K[0]=roundKey[nCount++];K[1]=roundKey[nCount++];Seed.SeedRound(L0,L1,R0,R1,K);K[0]=roundKey[nCount++];K[1]=roundKey[nCount++];Seed.SeedRound(R0,R1,L0,L1,K);K[0]=roundKey[nCount++];K[1]=roundKey[nCount++];Seed.SeedRound(L0,L1,R0,R1,K);K[0]=roundKey[nCount++];K[1]=roundKey[nCount++];Seed.SeedRound(R0,R1,L0,L1,K);K[0]=roundKey[nCount++];K[1]=roundKey[nCount++];Seed.SeedRound(L0,L1,R0,R1,K);K[0]=roundKey[nCount++];K[1]=roundKey[nCount++];Seed.SeedRound(R0,R1,L0,L1,K);K[0]=roundKey[nCount++];K[1]=roundKey[nCount++];Seed.SeedRound(L0,L1,R0,R1,K);K[0]=roundKey[nCount++];K[1]=roundKey[nCount++];Seed.SeedRound(R0,R1,L0,L1,K);K[0]=roundKey[nCount++];K[1]=roundKey[nCount++];Seed.SeedRound(L0,L1,R0,R1,K);K[0]=roundKey[nCount++];K[1]=roundKey[nCount++];Seed.SeedRound(R0,R1,L0,L1,K);if(!ENDIAN){EndianChange(L0);EndianChange(L1);EndianChange(R0);EndianChange(R1)}for(var i=0;i<4;i++){outData[i]=(((R0[0])>>>(8*(3-i)))&0xff);outData[4+i]=(((R1[0])>>>(8*(3-i)))&0xff);outData[8+i]=(((L0[0])>>>(8*(3-i)))&0xff);outData[12+i]=(((L1[0])>>>(8*(3-i)))&0xff)}};Seed.SeedDecrypt=function(inData,roundKey,outData){var L0=new Array(1);var L1=new Array(1);var R0=new Array(1);var R1=new Array(1);var K=new Array(2);L0[0]=0x0;L1[0]=0x0;R0[0]=0x0;R1[0]=0x0;var nCount=31;L0[0]=(inData[0]&0x000000ff);L0[0]=((L0[0])<<8)^(inData[1]&0x000000ff);L0[0]=((L0[0])<<8)^(inData[2]&0x000000ff);L0[0]=((L0[0])<<8)^(inData[3]&0x000000ff);L1[0]=(inData[4]&0x000000ff);L1[0]=((L1[0])<<8)^(inData[5]&0x000000ff);L1[0]=((L1[0])<<8)^(inData[6]&0x000000ff);L1[0]=((L1[0])<<8)^(inData[7]&0x000000ff);R0[0]=(inData[8]&0x000000ff);R0[0]=((R0[0])<<8)^(inData[9]&0x000000ff);R0[0]=((R0[0])<<8)^(inData[10]&0x000000ff);R0[0]=((R0[0])<<8)^(inData[11]&0x000000ff);R1[0]=(inData[12]&0x000000ff);R1[0]=((R1[0])<<8)^(inData[13]&0x000000ff);R1[0]=((R1[0])<<8)^(inData[14]&0x000000ff);R1[0]=((R1[0])<<8)^(inData[15]&0x000000ff);if(!ENDIAN){EndianChange(L0);EndianChange(L1);EndianChange(R0);EndianChange(R1)}K[1]=roundKey[nCount--];K[0]=roundKey[nCount--];Seed.SeedRound(L0,L1,R0,R1,K);K[1]=roundKey[nCount--];K[0]=roundKey[nCount--];Seed.SeedRound(R0,R1,L0,L1,K);K[1]=roundKey[nCount--];K[0]=roundKey[nCount--];Seed.SeedRound(L0,L1,R0,R1,K);K[1]=roundKey[nCount--];K[0]=roundKey[nCount--];Seed.SeedRound(R0,R1,L0,L1,K);K[1]=roundKey[nCount--];K[0]=roundKey[nCount--];Seed.SeedRound(L0,L1,R0,R1,K);K[1]=roundKey[nCount--];K[0]=roundKey[nCount--];Seed.SeedRound(R0,R1,L0,L1,K);K[1]=roundKey[nCount--];K[0]=roundKey[nCount--];Seed.SeedRound(L0,L1,R0,R1,K);K[1]=roundKey[nCount--];K[0]=roundKey[nCount--];Seed.SeedRound(R0,R1,L0,L1,K);K[1]=roundKey[nCount--];K[0]=roundKey[nCount--];Seed.SeedRound(L0,L1,R0,R1,K);K[1]=roundKey[nCount--];K[0]=roundKey[nCount--];Seed.SeedRound(R0,R1,L0,L1,K);K[1]=roundKey[nCount--];K[0]=roundKey[nCount--];Seed.SeedRound(L0,L1,R0,R1,K);K[1]=roundKey[nCount--];K[0]=roundKey[nCount--];Seed.SeedRound(R0,R1,L0,L1,K);K[1]=roundKey[nCount--];K[0]=roundKey[nCount--];Seed.SeedRound(L0,L1,R0,R1,K);K[1]=roundKey[nCount--];K[0]=roundKey[nCount--];Seed.SeedRound(R0,R1,L0,L1,K);K[1]=roundKey[nCount--];K[0]=roundKey[nCount--];Seed.SeedRound(L0,L1,R0,R1,K);K[1]=roundKey[nCount--];K[0]=roundKey[nCount];Seed.SeedRound(R0,R1,L0,L1,K);if(!ENDIAN){EndianChange(L0);EndianChange(L1);EndianChange(R0);EndianChange(R1)}for(var i=0;i<4;i++){outData[i]=(((R0[0])>>>(8*(3-i)))&0xff);outData[4+i]=(((R1[0])>>>(8*(3-i)))&0xff);outData[8+i]=(((L0[0])>>>(8*(3-i)))&0xff);outData[12+i]=(((L1[0])>>>(8*(3-i)))&0xff)}};Seed.EncRoundKeyUpdate0=function(K,A,B,C,D,Z){var T0;var T00,T11;T0=A[0];A[0]=(A[0]>>>8)^(B[0]<<24);B[0]=(B[0]>>>8)^(T0<<24);T00=A[0]+C[0]-Seed.KC[Z];T11=B[0]+Seed.KC[Z]-D[0];K[0]=Seed.SS0[Seed.GetB0(T00)]^Seed.SS1[Seed.GetB1(T00)]^Seed.SS2[Seed.GetB2(T00)]^Seed.SS3[Seed.GetB3(T00)];K[1]=Seed.SS0[Seed.GetB0(T11)]^Seed.SS1[Seed.GetB1(T11)]^Seed.SS2[Seed.GetB2(T11)]^Seed.SS3[Seed.GetB3(T11)]};Seed.EncRoundKeyUpdate1=function(K,A,B,C,D,Z){var T0;var T00,T11;T0=C[0];C[0]=(C[0]<<8)^(D[0]>>>24);D[0]=(D[0]<<8)^(T0>>>24);T00=A[0]+C[0]-Seed.KC[Z];T11=B[0]+Seed.KC[Z]-D[0];K[0]=Seed.SS0[Seed.GetB0(T00)]^Seed.SS1[Seed.GetB1(T00)]^Seed.SS2[Seed.GetB2(T00)]^Seed.SS3[Seed.GetB3(T00)];K[1]=Seed.SS0[Seed.GetB0(T11)]^Seed.SS1[Seed.GetB1(T11)]^Seed.SS2[Seed.GetB2(T11)]^Seed.SS3[Seed.GetB3(T11)]};Seed.SeedRoundKey=function(roundKey,userKey){var A=new Array(1);var B=new Array(1);var C=new Array(1);var D=new Array(1);var K=new Array(2);var T0,T1;var nCount=2;A[0]=(userKey[0]&0x000000ff);A[0]=(A[0]<<8)^(userKey[1]&0x000000ff);A[0]=(A[0]<<8)^(userKey[2]&0x000000ff);A[0]=(A[0]<<8)^(userKey[3]&0x000000ff);B[0]=(userKey[4]&0x000000ff);B[0]=(B[0]<<8)^(userKey[5]&0x000000ff);B[0]=(B[0]<<8)^(userKey[6]&0x000000ff);B[0]=(B[0]<<8)^(userKey[7]&0x000000ff);C[0]=(userKey[8]&0x000000ff);C[0]=(C[0]<<8)^(userKey[9]&0x000000ff);C[0]=(C[0]<<8)^(userKey[10]&0x000000ff);C[0]=(C[0]<<8)^(userKey[11]&0x000000ff);D[0]=(userKey[12]&0x000000ff);D[0]=(D[0]<<8)^(userKey[13]&0x000000ff);D[0]=(D[0]<<8)^(userKey[14]&0x000000ff);D[0]=(D[0]<<8)^(userKey[15]&0x000000ff);if(!ENDIAN){A[0]=EndianChange(A[0]);B[0]=EndianChange(B[0]);C[0]=EndianChange(C[0]);D[0]=EndianChange(D[0])}T0=A[0]+C[0]-Seed.KC[0];T1=B[0]-D[0]+Seed.KC[0];roundKey[0]=Seed.SS0[Seed.GetB0(T0)]^Seed.SS1[Seed.GetB1(T0)]^Seed.SS2[Seed.GetB2(T0)]^Seed.SS3[Seed.GetB3(T0)];roundKey[1]=Seed.SS0[Seed.GetB0(T1)]^Seed.SS1[Seed.GetB1(T1)]^Seed.SS2[Seed.GetB2(T1)]^Seed.SS3[Seed.GetB3(T1)];Seed.EncRoundKeyUpdate0(K,A,B,C,D,1);roundKey[nCount++]=K[0];roundKey[nCount++]=K[1];Seed.EncRoundKeyUpdate1(K,A,B,C,D,2);roundKey[nCount++]=K[0];roundKey[nCount++]=K[1];Seed.EncRoundKeyUpdate0(K,A,B,C,D,3);roundKey[nCount++]=K[0];roundKey[nCount++]=K[1];Seed.EncRoundKeyUpdate1(K,A,B,C,D,4);roundKey[nCount++]=K[0];roundKey[nCount++]=K[1];Seed.EncRoundKeyUpdate0(K,A,B,C,D,5);roundKey[nCount++]=K[0];roundKey[nCount++]=K[1];Seed.EncRoundKeyUpdate1(K,A,B,C,D,6);roundKey[nCount++]=K[0];roundKey[nCount++]=K[1];Seed.EncRoundKeyUpdate0(K,A,B,C,D,7);roundKey[nCount++]=K[0];roundKey[nCount++]=K[1];Seed.EncRoundKeyUpdate1(K,A,B,C,D,8);roundKey[nCount++]=K[0];roundKey[nCount++]=K[1];Seed.EncRoundKeyUpdate0(K,A,B,C,D,9);roundKey[nCount++]=K[0];roundKey[nCount++]=K[1];Seed.EncRoundKeyUpdate1(K,A,B,C,D,10);roundKey[nCount++]=K[0];roundKey[nCount++]=K[1];Seed.EncRoundKeyUpdate0(K,A,B,C,D,11);roundKey[nCount++]=K[0];roundKey[nCount++]=K[1];Seed.EncRoundKeyUpdate1(K,A,B,C,D,12);roundKey[nCount++]=K[0];roundKey[nCount++]=K[1];Seed.EncRoundKeyUpdate0(K,A,B,C,D,13);roundKey[nCount++]=K[0];roundKey[nCount++]=K[1];Seed.EncRoundKeyUpdate1(K,A,B,C,D,14);roundKey[nCount++]=K[0];roundKey[nCount++]=K[1];Seed.EncRoundKeyUpdate0(K,A,B,C,D,15);roundKey[nCount++]=K[0];roundKey[nCount++]=K[1]};Seed.SeedXor=function(outData,inData1,inData2){var i=0;for(i=0;i<16;i++){outData[i]=(inData1[i]^inData2[i])}};Seed.SeedSetKey=function(roundKey,key){Seed.SeedRoundKey(roundKey,key)};Seed.ArrayCopy=function(srcData,srcPos,destData,destPos,len){for(var i=srcPos;i<(srcPos+len);i++){destData[destPos++]=srcData[i]}};Seed.SeedEncryptEcb=function(outData,inData,roundKey){Seed.SeedEncrypt(inData,roundKey,outData)};Seed.SeedDecryptEcb=function(outData,inData,roundKey){Seed.SeedDecrypt(inData,roundKey,outData)};Seed.SeedEncryptCbc=function(roundKey,iv,inData,len,outData){var i,blockSize,remainLen;blockSize=len/16;remainLen=len%16;var resultOut=new Array(blockSize*16+remainLen);var resultIn=new Array(16);var Input=new Array(16);var xorer=new Array(16);Seed.ArrayCopy(iv,0,xorer,0,16);for(i=0;i<blockSize;i++){Seed.ArrayCopy(inData,i*16,Input,0,16);Seed.SeedXor(resultIn,Input,xorer);Seed.SeedEncryptEcb(resultIn,resultIn,roundKey);Seed.ArrayCopy(resultIn,0,resultOut,i*16,16)}if(remainLen!=0){Seed.ArrayCopy(inData,i*16,resultOut,i*16,remainLen)}Seed.ArrayCopy(resultOut,0,outData,0,blockSize*16+remainLen)};Seed.SeedDecryptCbc=function(roundKey,iv,inData,len,outData){var i,blockSize,remainLen;blockSize=len/16;remainLen=len%16;var resultOut=new Array(16*blockSize);var resultIn=new Array(16);var Input=new Array(16);var xorer=new Array(16);Seed.ArrayCopy(iv,0,xorer,0,16);for(i=0;i<blockSize;i++){Seed.ArrayCopy(inData,i*16,Input,0,16);Seed.SeedDecryptEcb(resultIn,Input,roundKey);Seed.SeedXor(resultIn,resultIn,xorer);Seed.ArrayCopy(resultIn,0,resultOut,i*16,16)}if(remainLen!=0){Seed.ArrayCopy(inData,i*16,resultOut,i*16,remainLen)}Seed.ArrayCopy(resultOut,0,outData,0,blockSize*16+remainLen)};Seed.SS0=[0x2989a1a8,0x05858184,0x16c6d2d4,0x13c3d3d0,0x14445054,0x1d0d111c,0x2c8ca0ac,0x25052124,0x1d4d515c,0x03434340,0x18081018,0x1e0e121c,0x11415150,0x3cccf0fc,0x0acac2c8,0x23436360,0x28082028,0x04444044,0x20002020,0x1d8d919c,0x20c0e0e0,0x22c2e2e0,0x08c8c0c8,0x17071314,0x2585a1a4,0x0f8f838c,0x03030300,0x3b4b7378,0x3b8bb3b8,0x13031310,0x12c2d2d0,0x2ecee2ec,0x30407070,0x0c8c808c,0x3f0f333c,0x2888a0a8,0x32023230,0x1dcdd1dc,0x36c6f2f4,0x34447074,0x2ccce0ec,0x15859194,0x0b0b0308,0x17475354,0x1c4c505c,0x1b4b5358,0x3d8db1bc,0x01010100,0x24042024,0x1c0c101c,0x33437370,0x18889098,0x10001010,0x0cccc0cc,0x32c2f2f0,0x19c9d1d8,0x2c0c202c,0x27c7e3e4,0x32427270,0x03838380,0x1b8b9398,0x11c1d1d0,0x06868284,0x09c9c1c8,0x20406060,0x10405050,0x2383a3a0,0x2bcbe3e8,0x0d0d010c,0x3686b2b4,0x1e8e929c,0x0f4f434c,0x3787b3b4,0x1a4a5258,0x06c6c2c4,0x38487078,0x2686a2a4,0x12021210,0x2f8fa3ac,0x15c5d1d4,0x21416160,0x03c3c3c0,0x3484b0b4,0x01414140,0x12425250,0x3d4d717c,0x0d8d818c,0x08080008,0x1f0f131c,0x19899198,0x00000000,0x19091118,0x04040004,0x13435350,0x37c7f3f4,0x21c1e1e0,0x3dcdf1fc,0x36467274,0x2f0f232c,0x27072324,0x3080b0b0,0x0b8b8388,0x0e0e020c,0x2b8ba3a8,0x2282a2a0,0x2e4e626c,0x13839390,0x0d4d414c,0x29496168,0x3c4c707c,0x09090108,0x0a0a0208,0x3f8fb3bc,0x2fcfe3ec,0x33c3f3f0,0x05c5c1c4,0x07878384,0x14041014,0x3ecef2fc,0x24446064,0x1eced2dc,0x2e0e222c,0x0b4b4348,0x1a0a1218,0x06060204,0x21012120,0x2b4b6368,0x26466264,0x02020200,0x35c5f1f4,0x12829290,0x0a8a8288,0x0c0c000c,0x3383b3b0,0x3e4e727c,0x10c0d0d0,0x3a4a7278,0x07474344,0x16869294,0x25c5e1e4,0x26062224,0x00808080,0x2d8da1ac,0x1fcfd3dc,0x2181a1a0,0x30003030,0x37073334,0x2e8ea2ac,0x36063234,0x15051114,0x22022220,0x38083038,0x34c4f0f4,0x2787a3a4,0x05454144,0x0c4c404c,0x01818180,0x29c9e1e8,0x04848084,0x17879394,0x35053134,0x0bcbc3c8,0x0ecec2cc,0x3c0c303c,0x31417170,0x11011110,0x07c7c3c4,0x09898188,0x35457174,0x3bcbf3f8,0x1acad2d8,0x38c8f0f8,0x14849094,0x19495158,0x02828280,0x04c4c0c4,0x3fcff3fc,0x09494148,0x39093138,0x27476364,0x00c0c0c0,0x0fcfc3cc,0x17c7d3d4,0x3888b0b8,0x0f0f030c,0x0e8e828c,0x02424240,0x23032320,0x11819190,0x2c4c606c,0x1bcbd3d8,0x2484a0a4,0x34043034,0x31c1f1f0,0x08484048,0x02c2c2c0,0x2f4f636c,0x3d0d313c,0x2d0d212c,0x00404040,0x3e8eb2bc,0x3e0e323c,0x3c8cb0bc,0x01c1c1c0,0x2a8aa2a8,0x3a8ab2b8,0x0e4e424c,0x15455154,0x3b0b3338,0x1cccd0dc,0x28486068,0x3f4f737c,0x1c8c909c,0x18c8d0d8,0x0a4a4248,0x16465254,0x37477374,0x2080a0a0,0x2dcde1ec,0x06464244,0x3585b1b4,0x2b0b2328,0x25456164,0x3acaf2f8,0x23c3e3e0,0x3989b1b8,0x3181b1b0,0x1f8f939c,0x1e4e525c,0x39c9f1f8,0x26c6e2e4,0x3282b2b0,0x31013130,0x2acae2e8,0x2d4d616c,0x1f4f535c,0x24c4e0e4,0x30c0f0f0,0x0dcdc1cc,0x08888088,0x16061214,0x3a0a3238,0x18485058,0x14c4d0d4,0x22426260,0x29092128,0x07070304,0x33033330,0x28c8e0e8,0x1b0b1318,0x05050104,0x39497178,0x10809090,0x2a4a6268,0x2a0a2228,0x1a8a9298];Seed.SS1=[0x38380830,0xe828c8e0,0x2c2d0d21,0xa42686a2,0xcc0fcfc3,0xdc1eced2,0xb03383b3,0xb83888b0,0xac2f8fa3,0x60204060,0x54154551,0xc407c7c3,0x44044440,0x6c2f4f63,0x682b4b63,0x581b4b53,0xc003c3c3,0x60224262,0x30330333,0xb43585b1,0x28290921,0xa02080a0,0xe022c2e2,0xa42787a3,0xd013c3d3,0x90118191,0x10110111,0x04060602,0x1c1c0c10,0xbc3c8cb0,0x34360632,0x480b4b43,0xec2fcfe3,0x88088880,0x6c2c4c60,0xa82888a0,0x14170713,0xc404c4c0,0x14160612,0xf434c4f0,0xc002c2c2,0x44054541,0xe021c1e1,0xd416c6d2,0x3c3f0f33,0x3c3d0d31,0x8c0e8e82,0x98188890,0x28280820,0x4c0e4e42,0xf436c6f2,0x3c3e0e32,0xa42585a1,0xf839c9f1,0x0c0d0d01,0xdc1fcfd3,0xd818c8d0,0x282b0b23,0x64264662,0x783a4a72,0x24270723,0x2c2f0f23,0xf031c1f1,0x70324272,0x40024242,0xd414c4d0,0x40014141,0xc000c0c0,0x70334373,0x64274763,0xac2c8ca0,0x880b8b83,0xf437c7f3,0xac2d8da1,0x80008080,0x1c1f0f13,0xc80acac2,0x2c2c0c20,0xa82a8aa2,0x34340430,0xd012c2d2,0x080b0b03,0xec2ecee2,0xe829c9e1,0x5c1d4d51,0x94148490,0x18180810,0xf838c8f0,0x54174753,0xac2e8ea2,0x08080800,0xc405c5c1,0x10130313,0xcc0dcdc1,0x84068682,0xb83989b1,0xfc3fcff3,0x7c3d4d71,0xc001c1c1,0x30310131,0xf435c5f1,0x880a8a82,0x682a4a62,0xb03181b1,0xd011c1d1,0x20200020,0xd417c7d3,0x00020202,0x20220222,0x04040400,0x68284860,0x70314171,0x04070703,0xd81bcbd3,0x9c1d8d91,0x98198991,0x60214161,0xbc3e8eb2,0xe426c6e2,0x58194951,0xdc1dcdd1,0x50114151,0x90108090,0xdc1cccd0,0x981a8a92,0xa02383a3,0xa82b8ba3,0xd010c0d0,0x80018181,0x0c0f0f03,0x44074743,0x181a0a12,0xe023c3e3,0xec2ccce0,0x8c0d8d81,0xbc3f8fb3,0x94168692,0x783b4b73,0x5c1c4c50,0xa02282a2,0xa02181a1,0x60234363,0x20230323,0x4c0d4d41,0xc808c8c0,0x9c1e8e92,0x9c1c8c90,0x383a0a32,0x0c0c0c00,0x2c2e0e22,0xb83a8ab2,0x6c2e4e62,0x9c1f8f93,0x581a4a52,0xf032c2f2,0x90128292,0xf033c3f3,0x48094941,0x78384870,0xcc0cccc0,0x14150511,0xf83bcbf3,0x70304070,0x74354571,0x7c3f4f73,0x34350531,0x10100010,0x00030303,0x64244460,0x6c2d4d61,0xc406c6c2,0x74344470,0xd415c5d1,0xb43484b0,0xe82acae2,0x08090901,0x74364672,0x18190911,0xfc3ecef2,0x40004040,0x10120212,0xe020c0e0,0xbc3d8db1,0x04050501,0xf83acaf2,0x00010101,0xf030c0f0,0x282a0a22,0x5c1e4e52,0xa82989a1,0x54164652,0x40034343,0x84058581,0x14140410,0x88098981,0x981b8b93,0xb03080b0,0xe425c5e1,0x48084840,0x78394971,0x94178793,0xfc3cccf0,0x1c1e0e12,0x80028282,0x20210121,0x8c0c8c80,0x181b0b13,0x5c1f4f53,0x74374773,0x54144450,0xb03282b2,0x1c1d0d11,0x24250521,0x4c0f4f43,0x00000000,0x44064642,0xec2dcde1,0x58184850,0x50124252,0xe82bcbe3,0x7c3e4e72,0xd81acad2,0xc809c9c1,0xfc3dcdf1,0x30300030,0x94158591,0x64254561,0x3c3c0c30,0xb43686b2,0xe424c4e0,0xb83b8bb3,0x7c3c4c70,0x0c0e0e02,0x50104050,0x38390931,0x24260622,0x30320232,0x84048480,0x68294961,0x90138393,0x34370733,0xe427c7e3,0x24240420,0xa42484a0,0xc80bcbc3,0x50134353,0x080a0a02,0x84078783,0xd819c9d1,0x4c0c4c40,0x80038383,0x8c0f8f83,0xcc0ecec2,0x383b0b33,0x480a4a42,0xb43787b3];Seed.SS2=[0xa1a82989,0x81840585,0xd2d416c6,0xd3d013c3,0x50541444,0x111c1d0d,0xa0ac2c8c,0x21242505,0x515c1d4d,0x43400343,0x10181808,0x121c1e0e,0x51501141,0xf0fc3ccc,0xc2c80aca,0x63602343,0x20282808,0x40440444,0x20202000,0x919c1d8d,0xe0e020c0,0xe2e022c2,0xc0c808c8,0x13141707,0xa1a42585,0x838c0f8f,0x03000303,0x73783b4b,0xb3b83b8b,0x13101303,0xd2d012c2,0xe2ec2ece,0x70703040,0x808c0c8c,0x333c3f0f,0xa0a82888,0x32303202,0xd1dc1dcd,0xf2f436c6,0x70743444,0xe0ec2ccc,0x91941585,0x03080b0b,0x53541747,0x505c1c4c,0x53581b4b,0xb1bc3d8d,0x01000101,0x20242404,0x101c1c0c,0x73703343,0x90981888,0x10101000,0xc0cc0ccc,0xf2f032c2,0xd1d819c9,0x202c2c0c,0xe3e427c7,0x72703242,0x83800383,0x93981b8b,0xd1d011c1,0x82840686,0xc1c809c9,0x60602040,0x50501040,0xa3a02383,0xe3e82bcb,0x010c0d0d,0xb2b43686,0x929c1e8e,0x434c0f4f,0xb3b43787,0x52581a4a,0xc2c406c6,0x70783848,0xa2a42686,0x12101202,0xa3ac2f8f,0xd1d415c5,0x61602141,0xc3c003c3,0xb0b43484,0x41400141,0x52501242,0x717c3d4d,0x818c0d8d,0x00080808,0x131c1f0f,0x91981989,0x00000000,0x11181909,0x00040404,0x53501343,0xf3f437c7,0xe1e021c1,0xf1fc3dcd,0x72743646,0x232c2f0f,0x23242707,0xb0b03080,0x83880b8b,0x020c0e0e,0xa3a82b8b,0xa2a02282,0x626c2e4e,0x93901383,0x414c0d4d,0x61682949,0x707c3c4c,0x01080909,0x02080a0a,0xb3bc3f8f,0xe3ec2fcf,0xf3f033c3,0xc1c405c5,0x83840787,0x10141404,0xf2fc3ece,0x60642444,0xd2dc1ece,0x222c2e0e,0x43480b4b,0x12181a0a,0x02040606,0x21202101,0x63682b4b,0x62642646,0x02000202,0xf1f435c5,0x92901282,0x82880a8a,0x000c0c0c,0xb3b03383,0x727c3e4e,0xd0d010c0,0x72783a4a,0x43440747,0x92941686,0xe1e425c5,0x22242606,0x80800080,0xa1ac2d8d,0xd3dc1fcf,0xa1a02181,0x30303000,0x33343707,0xa2ac2e8e,0x32343606,0x11141505,0x22202202,0x30383808,0xf0f434c4,0xa3a42787,0x41440545,0x404c0c4c,0x81800181,0xe1e829c9,0x80840484,0x93941787,0x31343505,0xc3c80bcb,0xc2cc0ece,0x303c3c0c,0x71703141,0x11101101,0xc3c407c7,0x81880989,0x71743545,0xf3f83bcb,0xd2d81aca,0xf0f838c8,0x90941484,0x51581949,0x82800282,0xc0c404c4,0xf3fc3fcf,0x41480949,0x31383909,0x63642747,0xc0c000c0,0xc3cc0fcf,0xd3d417c7,0xb0b83888,0x030c0f0f,0x828c0e8e,0x42400242,0x23202303,0x91901181,0x606c2c4c,0xd3d81bcb,0xa0a42484,0x30343404,0xf1f031c1,0x40480848,0xc2c002c2,0x636c2f4f,0x313c3d0d,0x212c2d0d,0x40400040,0xb2bc3e8e,0x323c3e0e,0xb0bc3c8c,0xc1c001c1,0xa2a82a8a,0xb2b83a8a,0x424c0e4e,0x51541545,0x33383b0b,0xd0dc1ccc,0x60682848,0x737c3f4f,0x909c1c8c,0xd0d818c8,0x42480a4a,0x52541646,0x73743747,0xa0a02080,0xe1ec2dcd,0x42440646,0xb1b43585,0x23282b0b,0x61642545,0xf2f83aca,0xe3e023c3,0xb1b83989,0xb1b03181,0x939c1f8f,0x525c1e4e,0xf1f839c9,0xe2e426c6,0xb2b03282,0x31303101,0xe2e82aca,0x616c2d4d,0x535c1f4f,0xe0e424c4,0xf0f030c0,0xc1cc0dcd,0x80880888,0x12141606,0x32383a0a,0x50581848,0xd0d414c4,0x62602242,0x21282909,0x03040707,0x33303303,0xe0e828c8,0x13181b0b,0x01040505,0x71783949,0x90901080,0x62682a4a,0x22282a0a,0x92981a8a];Seed.SS3=[0x08303838,0xc8e0e828,0x0d212c2d,0x86a2a426,0xcfc3cc0f,0xced2dc1e,0x83b3b033,0x88b0b838,0x8fa3ac2f,0x40606020,0x45515415,0xc7c3c407,0x44404404,0x4f636c2f,0x4b63682b,0x4b53581b,0xc3c3c003,0x42626022,0x03333033,0x85b1b435,0x09212829,0x80a0a020,0xc2e2e022,0x87a3a427,0xc3d3d013,0x81919011,0x01111011,0x06020406,0x0c101c1c,0x8cb0bc3c,0x06323436,0x4b43480b,0xcfe3ec2f,0x88808808,0x4c606c2c,0x88a0a828,0x07131417,0xc4c0c404,0x06121416,0xc4f0f434,0xc2c2c002,0x45414405,0xc1e1e021,0xc6d2d416,0x0f333c3f,0x0d313c3d,0x8e828c0e,0x88909818,0x08202828,0x4e424c0e,0xc6f2f436,0x0e323c3e,0x85a1a425,0xc9f1f839,0x0d010c0d,0xcfd3dc1f,0xc8d0d818,0x0b23282b,0x46626426,0x4a72783a,0x07232427,0x0f232c2f,0xc1f1f031,0x42727032,0x42424002,0xc4d0d414,0x41414001,0xc0c0c000,0x43737033,0x47636427,0x8ca0ac2c,0x8b83880b,0xc7f3f437,0x8da1ac2d,0x80808000,0x0f131c1f,0xcac2c80a,0x0c202c2c,0x8aa2a82a,0x04303434,0xc2d2d012,0x0b03080b,0xcee2ec2e,0xc9e1e829,0x4d515c1d,0x84909414,0x08101818,0xc8f0f838,0x47535417,0x8ea2ac2e,0x08000808,0xc5c1c405,0x03131013,0xcdc1cc0d,0x86828406,0x89b1b839,0xcff3fc3f,0x4d717c3d,0xc1c1c001,0x01313031,0xc5f1f435,0x8a82880a,0x4a62682a,0x81b1b031,0xc1d1d011,0x00202020,0xc7d3d417,0x02020002,0x02222022,0x04000404,0x48606828,0x41717031,0x07030407,0xcbd3d81b,0x8d919c1d,0x89919819,0x41616021,0x8eb2bc3e,0xc6e2e426,0x49515819,0xcdd1dc1d,0x41515011,0x80909010,0xccd0dc1c,0x8a92981a,0x83a3a023,0x8ba3a82b,0xc0d0d010,0x81818001,0x0f030c0f,0x47434407,0x0a12181a,0xc3e3e023,0xcce0ec2c,0x8d818c0d,0x8fb3bc3f,0x86929416,0x4b73783b,0x4c505c1c,0x82a2a022,0x81a1a021,0x43636023,0x03232023,0x4d414c0d,0xc8c0c808,0x8e929c1e,0x8c909c1c,0x0a32383a,0x0c000c0c,0x0e222c2e,0x8ab2b83a,0x4e626c2e,0x8f939c1f,0x4a52581a,0xc2f2f032,0x82929012,0xc3f3f033,0x49414809,0x48707838,0xccc0cc0c,0x05111415,0xcbf3f83b,0x40707030,0x45717435,0x4f737c3f,0x05313435,0x00101010,0x03030003,0x44606424,0x4d616c2d,0xc6c2c406,0x44707434,0xc5d1d415,0x84b0b434,0xcae2e82a,0x09010809,0x46727436,0x09111819,0xcef2fc3e,0x40404000,0x02121012,0xc0e0e020,0x8db1bc3d,0x05010405,0xcaf2f83a,0x01010001,0xc0f0f030,0x0a22282a,0x4e525c1e,0x89a1a829,0x46525416,0x43434003,0x85818405,0x04101414,0x89818809,0x8b93981b,0x80b0b030,0xc5e1e425,0x48404808,0x49717839,0x87939417,0xccf0fc3c,0x0e121c1e,0x82828002,0x01212021,0x8c808c0c,0x0b13181b,0x4f535c1f,0x47737437,0x44505414,0x82b2b032,0x0d111c1d,0x05212425,0x4f434c0f,0x00000000,0x46424406,0xcde1ec2d,0x48505818,0x42525012,0xcbe3e82b,0x4e727c3e,0xcad2d81a,0xc9c1c809,0xcdf1fc3d,0x00303030,0x85919415,0x45616425,0x0c303c3c,0x86b2b436,0xc4e0e424,0x8bb3b83b,0x4c707c3c,0x0e020c0e,0x40505010,0x09313839,0x06222426,0x02323032,0x84808404,0x49616829,0x83939013,0x07333437,0xc7e3e427,0x04202424,0x84a0a424,0xcbc3c80b,0x43535013,0x0a02080a,0x87838407,0xc9d1d819,0x4c404c0c,0x83838003,0x8f838c0f,0xcec2cc0e,0x0b33383b,0x4a42480a,0x87b3b437];Seed.KC=[0x9e3779b9,0x3c6ef373,0x78dde6e6,0xf1bbcdcc,0xe3779b99,0xc6ef3733,0x8dde6e67,0x1bbcdccf,0x3779b99e,0x6ef3733c,0xdde6e678,0xbbcdccf1,0x779b99e3,0xef3733c6,0xde6e678d,0xbcdccf1b];